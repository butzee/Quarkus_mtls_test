mvn io.quarkus:quarkus-maven-plugin:create "-DprojectGroupId=org.example" "-DprojectArtifactId=microservice-a" "-DclassName=org.example.ProductionResource" "-Dpath=/produce" "-Djavax.net.debug=ssl,handshake"

mvn io.quarkus:quarkus-maven-plugin:create "-DprojectGroupId=org.example" "-DprojectArtifactId=microservice-b" "-DclassName=org.example.ConsumptionResource" "-Dpath=/consume" "-Djavax.net.debug=ssl,handshake"

# CA
openssl genrsa -out ca-key.pem 2048
openssl req -new -x509 -key ca-key.pem -out ca-cert.pem -days 3650 -subj '/CN=localhost/OU=CCITM/O=CCITM/L=Hannover/ST=Niedersachsen/C=DE'

# FAKE CA
openssl genrsa -out ca-key-fake.pem 2048
openssl req -new -x509 -key ca-key-fake.pem -out ca-cert-fake.pem -days 3650 -subj '/CN=localhost/OU=CCITM/O=CCITM/L=Hannover/ST=Niedersachsen/C=DE'

# For Kafka Broker Truststore
keytool -keystore kafka-broker-truststore.jks -alias CARoot -import -file ca-cert.pem -storepass changeit -noprompt

# For Each Client Truststore (example for client1)
keytool -keystore kafka-client1-truststore.jks -alias CARoot -import -file ca-cert.pem -storepass changeit -noprompt

keytool -keystore kafka-client2-truststore.jks -alias CARoot -import -file ca-cert.pem -storepass changeit -noprompt


# Kafka Broker
openssl genrsa -out kafka-broker-key.pem 2048
openssl req -new -key kafka-broker-key.pem -out kafka-broker-csr.pem -subj '/CN=localhost/OU=CCITM/O=CCITM/L=Hannover/ST=Niedersachsen/C=DE'
openssl x509 -req -in kafka-broker-csr.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out kafka-broker-cert.pem -days 3650

keytool -keystore kafka-broker.jks -alias localhost -validity 3650 -genkey -keyalg RSA -dname "CN=localhost, OU=CCITM, O=CCITM, L=Hannover, ST=Niedersachsen, C=DE" -storepass changeit -keypass changeit
keytool -keystore kafka-broker.jks -alias localhost -certreq -file kafka-broker-csr.pem -storepass changeit
openssl x509 -req -in kafka-broker-csr.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out kafka-broker-cert.pem -days 3650
keytool -keystore kafka-broker.jks -alias CARoot -import -file ca-cert.pem -noprompt -storepass changeit
keytool -keystore kafka-broker.jks -alias localhost -import -file kafka-broker-cert.pem -storepass changeit

# client1
openssl genrsa -out kafka-client1-key.pem 2048
openssl req -new -key kafka-client1-key.pem -out kafka-client1-csr.pem -subj '/CN=kafka-client1/OU=CCITM/O=CCITM/L=Hannover/ST=Niedersachsen/C=DE'
openssl x509 -req -in kafka-client1-csr.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out kafka-client1-cert.pem -days 3650
keytool -keystore kafka-client1.jks -alias localhost -validity 3650 -genkey -keyalg RSA -dname "CN=localhost, OU=CCITM, O=CCITM, L=Hannover, ST=Niedersachsen, C=DE" -storepass changeit -keypass changeit
keytool -keystore kafka-client1.jks -alias localhost -certreq -file kafka-client1-csr.pem -storepass changeit
openssl x509 -req -in kafka-client1-csr.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out kafka-client1-cert.pem -days 3650
keytool -keystore kafka-client1.jks -alias CARoot -import -file ca-cert.pem -noprompt -storepass changeit
keytool -keystore kafka-client1.jks -alias localhost -import -file kafka-client1-cert.pem -noprompt -storepass changeit


openssl genrsa -out kafka-client1fake-key.pem 2048
openssl req -new -key kafka-client1fake-key.pem -out kafka-client1fake-csr.pem -subj '/CN=kafka-client1/OU=CCITM/O=CCITM/L=Hannover/ST=Niedersachsen/C=DE'
openssl x509 -req -in kafka-client1fake-csr.pem -CA ca-cert-fake.pem -CAkey ca-key-fake.pem -CAcreateserial -out kafka-client1fake-cert.pem -days 3650
keytool -keystore kafka-client1fake.jks -alias localhost -validity 3650 -genkey -keyalg RSA -dname "CN=localhost, OU=CCITM, O=CCITM, L=Hannover, ST=Niedersachsen, C=DE" -storepass changeit -keypass changeit
keytool -keystore kafka-client1fake.jks -alias localhost -certreq -file kafka-client1fake-csr.pem -storepass changeit
openssl x509 -req -in kafka-client1fake-csr.pem -CA ca-cert-fake.pem -CAkey ca-key-fake.pem -CAcreateserial -out kafka-client1fake-cert.pem -days 3650
keytool -keystore kafka-client1fake.jks -alias CARoot -import -file ca-cert-fake.pem -noprompt -storepass changeit
keytool -keystore kafka-client1fake.jks -alias localhost -import -file kafka-client1fake-cert.pem -noprompt -storepass changeit


# client2
openssl genrsa -out kafka-client2-key.pem 2048
openssl req -new -key kafka-client2-key.pem -out kafka-client2-csr.pem -subj '/CN=localhost/OU=CCITM/O=CCITM/L=Hannover/ST=Niedersachsen/C=DE'
openssl x509 -req -in kafka-client2-csr.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out kafka-client2-cert.pem -days 3650

keytool -keystore kafka-client2.jks -alias localhost -validity 3650 -genkey -keyalg RSA -dname "CN=kafka-client2, OU=CCITM, O=CCITM, L=Hannover, ST=Niedersachsen, C=DE" -storepass changeit -keypass changeit
keytool -keystore kafka-client2.jks -alias localhost -certreq -file kafka-client2-csr.pem -storepass changeit
openssl x509 -req -in kafka-client2-csr.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out kafka-client2-cert.pem -days 3650
keytool -keystore kafka-client2.jks -alias CARoot -import -file ca-cert.pem -noprompt -storepass changeit
keytool -keystore kafka-client2.jks -alias localhost -import -file kafka-client2-cert.pem -noprompt -storepass changeit

